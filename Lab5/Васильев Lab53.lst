(define (gonumbr lit) ;gluh
  (if (or (= lit "п") 
          (= lit "ф") 
          (= lit "т") 
          (= lit "с") 
          (= lit "ш") 
          (= lit "к") 
          (= lit "ц") 
          (= lit "х")
          (= lit "б") 
          (= lit "в") 
          (= lit "г") 
          (= lit "д") 
          (= lit "ж") 
          (= lit "з")
      	  (= lit "щ")
          (= lit "ч"))
    "1"
  (if (or (= lit "м") ;Sonor
          (= lit "н") 
          (= lit "л") 
          (= lit "р"))
    "2"
  (if (or (= lit "а") ;glasn
          (= lit "о") 
          (= lit "у") 
          (= lit "ы")
          (= lit "и")
          (= lit "э")
          (= lit "е")
          (= lit "я")
          (= lit "ё")
          (= lit "ю"))
    "3"
    (if (= lit "й") ;Й
        "4"
      )
	)
	)
))

(define (gol1 word i)
  (if (< i (/ (length word) 2)) 
      (gonumbr (nth i word))
      )
  
  )
(define (gol2 word i)
  (if (< i (/ (length word) 2)) 
      (nth i word)
      )
  
  )


(define (goletter1 word i)
  (if (< i (/(length word)2))
    (flat (list (gol1 word i ) ;перевод в цифр
                (goletter1 word (+ i 1))))          
    )
    )
(define (goletter2 word i)
  (if (< i (/(length word)2))
    (flat (list (gol2 word i ) ;перевод в цифр
                (goletter2 word (+ i 1))))          
    )
    )

(define (gotire numlst litlst i)
  (if (< i (length numlst))
 	(if (= (nth i numlst) "3") ;Если гласная
        (if (> (+ i 3) (length numlst)) ;Если после гласной меньше двух букв	
         
         
         (if (= (+ i 1) (length numlst))   
          	(flat(list(nth i litlst) (gotire numlst litlst (+ i 1))))
            (flat(list (nth i litlst) (gotire numlst litlst (+ i 1)))))
          		
            
(if (and(= (nth (+ i 1) numlst) "1")(= (nth (+ i 2) numlst) "1"));Правило 1
(flat(list (nth i litlst) "-" (gotire numlst litlst (+ i 1))))
	(if (and(= (nth (+ i 1) numlst) "1")(= (nth (+ i 2) numlst) "2"))  ;Правило 2
		(flat(list (nth i litlst) "-" (gotire numlst litlst (+ i 1))))
		(if (and(= (nth (+ i 1) numlst) "2")(= (nth (+ i 2) numlst) "1")) ;Правило 3
        	(flat(list (nth i litlst) (nth (+ i 1) litlst) "-" (gotire numlst litlst (+ i 2))))
            (if (and(= (nth (+ i 1) numlst) "4") (= (nth (+ i 2) numlst) "2"))
            	(flat(list (nth i litlst) (nth (+ i 1) litlst) "-" (gotire numlst litlst (+ i 2))))
                (flat(list (nth i litlst) "-" (gotire numlst litlst (+ i 1)))))
    	)
    )    
)  
  		)
    (flat(list (nth i litlst) (gotire numlst litlst (+ i 1)))) 
	)
)
)

(define (goWord predloj i)
  (if (< i (length predloj))
  (cons 
   (join(chop(gotire (join(chop(goletter1 (nth i predloj) 0)))
   (join(chop(goletter2 (nth i predloj) 0))) 0)));слово из цифр 
      (goWord predloj (+ i 1)))
  )
  )


(define (goPredloj text i)
  (if (< i (length text)))
  (chop(goWord (nth i text) 0))
  )

(define (foolap3 lstkeyword lstword)
  (list (join(flat(list (nth 0 lstkeyword) (rest lstword))))
        (join(flat(list (nth 0 lstword) (rest lstkeyword)))))
  )

(define (foo keyword word)
      (foolap3 (parse (nth 0 (goPredloj keyword 0))"-") (parse (nth 0 (goPredloj word 0))"-"))	
  )

(define (startlfive text i chet)
  (if (< i (length (nth 0 text )))
      (if (= chet 0)
  	(flat(cons (foo (list(list(nth i (nth 0 text)))) (list(list (nth (+ i 1) (nth 0 text)))))
          (startlfive text (+ i 2) chet)))
      (if (=(+ i 1) (length (nth 0 text )))
      (flat(cons (foo (list(list(nth i (nth 0 text)))) (list(list  (first (nth 0 text)))))))
         (flat(cons (foo (list(list(nth i (nth 0 text)))) (list(list (nth (+ i 1) (nth 0 text))))) (startlfive text (+ i 2) chet)))
		)
  )
)
  )

(define (lfive text)
  (let (chet(mod (length (nth 0 text ))2))
  (if (empty? text)
      "empty"
  (chop(startlfive text 0 chet))
  )
)
)

(lfive '(("сплетняпривет" "наверное" "виноваты" "огненные" "драконы")))